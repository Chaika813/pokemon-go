{"version":3,"sources":["app/TypeFilter.jsx","app/Card.jsx","app/PokemonsCards.jsx","app/Pokemon.jsx","App.js","reportWebVitals.js","index.js"],"names":["TypeFilter","props","useState","types","setTypes","useEffect","axios","get","then","res","data","results","catch","e","alert","message","className","role","aria-label","map","type","onClick","selectedType","filteredPokemons","pokemons","poke","typeExists","some","t","name","setPokemons","filterPokemons","Card","handlePokeInfo","src","id","alt","slot","PokemonsCards","style","display","visible","handleMorePokemons","Pokemon","scope","length","stats","stat","charAt","toUpperCase","slice","base_stat","weight","moves","offset","App","loadedPoke","setLoadedPoke","getMorePokemos","allPokemons","forEach","pokemon","fetchPokemonData","url","pokemonData","prevState","pockemon","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.addd2358.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function TypeFilter(props) {\r\n    const [types, setTypes] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('https://pokeapi.co/api/v2/type?limit=999')\r\n            .then(res => {\r\n                let types = res.data.results;\r\n                setTypes(types)\r\n            })\r\n            .catch(e => alert(e.message));\r\n    }, [])\r\n\r\n    const filterPokemons = (selectedType) => {\r\n        let filteredPokemons = props.pokemons.map(poke => {\r\n            const typeExists = poke.types.some(t => t.type.name === selectedType);\r\n            if (!typeExists) {\r\n              poke[\"visible\"] = false;\r\n            } else poke[\"visible\"] = true;\r\n            return poke;\r\n          })\r\n        props.setPokemons(filteredPokemons)\r\n    }\r\n\r\n    return (\r\n        <div className=\"btn-toolbar justify-content-center\" role=\"group\" aria-label=\"Filter button\">\r\n            {types.map((type) => {\r\n                return (\r\n                    <button type=\"button\" key={type.name} className=\"btn btn-outline-success mb-3\" onClick={() => { filterPokemons(type.name) }}>{type.name}</button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Card(props) {\r\n\r\n    const selectedPoke = () => {\r\n        props.handlePokeInfo(props.poke)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" onClick={selectedPoke}>\r\n            <img className=\"card-img-top\" src={`https://pokeres.bastionbot.org/images/pokemon/${props.poke.id}.png`} alt={`${props.poke.name}`}></img>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.poke.name}</h5>\r\n                <div className=\"card-text\">\r\n                    {props.poke.types.map(type => {\r\n                        return (\r\n                            <span className=\"badge badge-success mr-1\" key={type.slot}>{type.type.name}</span>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport TypeFilter from './TypeFilter';\r\nimport Card from './Card';\r\n\r\nexport default function PokemonsCards(props) {\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <TypeFilter pokemons={props.pokemons} setPokemons={props.setPokemons}/>\r\n            <div className=\"row justify-content-around\">\r\n                {props.pokemons.map((poke) => {\r\n                    return (\r\n                        <div className=\"col-xs-12 col-sm-6 col-md-4\" key={poke.name+ '-' + poke.id} style={{display: poke.visible ? 'block' : 'none'}}>\r\n                            <Card poke={poke} handlePokeInfo={props.handlePokeInfo}/>\r\n                        </div> \r\n                    )\r\n                    })}\r\n            </div>\r\n            <button className=\"btn btn-primary load-more\" onClick={props.handleMorePokemons}>Load More...</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Pokemon(props) {\r\n\r\n    const { poke } = props;\r\n\r\n    return (\r\n        <div className=\"card sticky-top selected-pokemon\">\r\n            <img className=\"card-img-top\" src={`https://pokeres.bastionbot.org/images/pokemon/${poke.id}.png`} alt={`${poke.name}`}></img>\r\n            <div className=\"card-body selected-card-body\">\r\n                <h5 className=\"card-title\">{poke.name + '   #' + poke.id}</h5>\r\n                <div className=\"card-text\">\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\"> \r\n                    <table className=\"table table-bordered table-striped mb-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">Type</th>\r\n                                <td>{poke.types.length === 1 ? poke.types[0].type.name : poke.types[0].type.name + ', '  + poke.types[1].type.name} </td>\r\n                            </tr>\r\n                            {poke.stats.map(stat => {\r\n                                return (\r\n                                    <tr key={poke.id + stat.stat.name}>\r\n                                        <th scope=\"row\">{stat.stat.name.charAt(0).toUpperCase() + stat.stat.name.slice(1)}</th>\r\n                                        <td key={stat.stat.name}>{stat.base_stat}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <th scope=\"row\">Weight</th>\r\n                                <td>{poke.weight}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Total moves</th>\r\n                                <td>{poke.moves.length} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport PokemonsCards from './app/PokemonsCards';\nimport Pokemon from './app/Pokemon';\nimport axios from 'axios';\n\nlet offset = 0;\n\nfunction App() {\n  const [loadedPoke, setLoadedPoke] = useState({});\n  const [pokemons, setPokemons] = useState([]);\n\n  useEffect(() => {\n    getMorePokemos();\n  }, [])\n\n  const getMorePokemos = () => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=12`)\n    .then(res => res.data.results)\n    .then((allPokemons) => {\n        allPokemons.forEach( pokemon => {\n            fetchPokemonData(pokemon)\n        })\n    })\n    .catch(e => alert(e.message));\n  }\n\n  const fetchPokemonData = (pokemon) => {\n      let url = pokemon.url;\n      axios.get(url)\n          .then(pokemonData => {\n              setPokemons(prevState => { \n                return [...prevState, pokemonData.data].map(poke => {\n                poke[\"visible\"] = true;\n                return poke\n              })})\n          })\n          .catch(e => alert(e.message)); \n  }\n\n  const handlePokeInfo = (pockemon) => {\n    setLoadedPoke(pockemon)\n  }\n\n  const handleMorePokemons = () => {\n    offset+=12\n    getMorePokemos();\n  }\n\n  const handlePokemons = (poke) => {\n    setPokemons(poke)\n  }\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Pokedex</h1>\n      </header>\n        <div className='page-wrapper'>\n          <section >\n            <PokemonsCards handlePokeInfo={handlePokeInfo} setPokemons={handlePokemons} pokemons={pokemons} handleMorePokemons={handleMorePokemons}/>\n          </section>\n          <aside>\n            {Object.keys(loadedPoke).length !== 0 ? <Pokemon poke={loadedPoke} /> : null}\n            </aside>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}